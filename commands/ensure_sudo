#!/usr/bin/env bash
set -euo pipefail

SCRIPT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)"
# shellcheck source=../functions.bash
source "${SCRIPT_ROOT}/functions.bash"

usage() {
  cat <<'EOF'
Usage: ensure_sudo [options] [username]

Ensures the sudo package is installed and optionally grants sudo privileges to a user.

Options:
  --mode=MODE        sudoers mode (NOPASSWD or PASSWD). Default: NOPASSWD.
  --create           Create the user if it doesn't exist.
  --uid=UID          UID to use when creating the user.
  --gid=GID          GID to use when creating the user.
  --home=DIR         Home directory path when creating the user.
  --shell=PATH       Login shell when creating the user (default /bin/bash).
  --force            Re-run even if a marker is present.
  --verbose          Enable debug logging.
  -h, --help         Show this help message.
EOF
}

mode="NOPASSWD"
create_user=0
uid=""
gid=""
home=""
shell="/bin/bash"

force=0

while [[ $# -gt 0 ]]; do
  case "$1" in
    --mode=*) mode=${1#*=}; shift ;;
    --mode)
      shift
      [[ $# -gt 0 ]] || die "--mode requires a value"
      mode=$1
      shift
      ;;
    --create) create_user=1; shift ;;
    --uid=*) uid=${1#*=}; shift ;;
    --uid)
      shift
      [[ $# -gt 0 ]] || die "--uid requires a value"
      uid=$1
      shift
      ;;
    --gid=*) gid=${1#*=}; shift ;;
    --gid)
      shift
      [[ $# -gt 0 ]] || die "--gid requires a value"
      gid=$1
      shift
      ;;
    --home=*) home=${1#*=}; shift ;;
    --home)
      shift
      [[ $# -gt 0 ]] || die "--home requires a value"
      home=$1
      shift
      ;;
    --shell=*) shell=${1#*=}; shift ;;
    --shell)
      shift
      [[ $# -gt 0 ]] || die "--shell requires a value"
      shell=$1
      shift
      ;;
    --force|-f) force=1; shift ;;
    --verbose) BASH_UTILS_VERBOSE=1; shift ;;
    -h|--help) usage; exit 0 ;;
    --) shift; break ;;
    -*) die "Unknown option: $1" ;;
    *) break ;;
  esac
done

username=${1:-}

marker_name="ensure_sudo"
marker_version="1"
scope="mode_${mode}"
[[ -n "$username" ]] && scope+="_user_${username}"
[[ $create_user -eq 1 ]] && scope+="_create"
[[ -n "$uid" ]] && scope+="_uid_${uid}"
[[ -n "$gid" ]] && scope+="_gid_${gid}"
[[ -n "$home" ]] && scope+="_home_${home}"

if coder_marker_should_run "$marker_name" "$marker_version" "/root" "$scope" "$force"; then
  ensure_packages sudo

  if [[ -n "$username" ]]; then
    if [[ $create_user -eq 1 ]]; then
      ensure_user_args=(--name "$username" --shell "$shell")
      [[ -n "$uid" ]] && ensure_user_args+=(--uid "$uid")
      [[ -n "$gid" ]] && ensure_user_args+=(--gid "$gid")
      [[ -n "$home" ]] && ensure_user_args+=(--home "$home")
      ensure_user "${ensure_user_args[@]}"
    elif ! id "$username" >/dev/null 2>&1; then
      die "User $username does not exist. Use --create to create it first."
    fi
    ensure_user_in_sudoers "$username" "$mode"
    log_info "sudo ready and privileges granted to $username"
  else
    log_info "sudo package ensured"
  fi

  coder_marker_write "$marker_name" "$marker_version" "/root" "$scope" >/dev/null
else
  marker=$(coder_marker_path "$marker_name" "$marker_version" "/root" "$scope")
  log_info "sudo already ensured (marker $marker); skipping"
fi
